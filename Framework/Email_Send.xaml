<Activity mc:Ignorable="sap sap2010" x:Class="Email_Send" this:Email_Send.in_Subject="Hello World!" this:Email_Send.in_HTMLBody="Email Success!" this:Email_Send.in_To="robert.kiser@thekag.com;charitha.reddy@thekag.com;arivazhagan.m1@protivitiglobal.in" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System.Net.Mail" xmlns:this="clr-namespace:" xmlns:uasa="clr-namespace:UiPath.Activities.System.Arrays;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:umam="clr-namespace:UiPath.MicrosoftOffice365.Activities.Mail;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umame="clr-namespace:UiPath.MicrosoftOffice365.Activities.Mail.Enums;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:upr="clr-namespace:UiPath.Platform.ResourceHandling;assembly=UiPath.Platform" xmlns:usau="clr-namespace:UiPath.Shared.Activities.Utils;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Subject" Type="InArgument(x:String)" />
    <x:Property Name="in_HTMLBody" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="in_To" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="in_CC" Type="InArgument(x:String)" />
    <x:Property Name="in_BCC" Type="InArgument(x:String)" />
    <x:Property Name="in_ForwardMessage" Type="InArgument(snm:MailMessage)" />
    <x:Property Name="in_ReplyTo" Type="InArgument(x:String)" />
    <x:Property Name="in_AttachmentsFolder" Type="InArgument(x:String)" />
    <x:Property Name="in_DBConn" Type="InArgument(ui:DatabaseConnection)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:String))" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1110,4835</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>SendEmail_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="70">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.MicrosoftOffice365.Enums</x:String>
      <x:String>Microsoft.Graph</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Enums</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail.Enums</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Platform</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Activities.System.Arrays</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="114">
      <AssemblyReference>Microsoft.Graph</AssemblyReference>
      <AssemblyReference>Microsoft.Graph.Core</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>UiPath.CodedWorkflows</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Simply sends an email based off all the parameters provided.  This is important so emails are sent the same way throughout the entire project.  Also logs the email into LogDB if a DB Connection is provided." DisplayName="Email_Send" sap:VirtualizedContainerService.HintSize="673,4770" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="str_AttachmentList" />
      <Variable x:TypeArguments="x:String" Name="str_AttachmentLog" />
      <Variable x:TypeArguments="scg:IList(upr:IResource)" Name="res_AttachmentList" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="611,173" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Trace" Message="[&quot;Start: Email_Send&quot;]" />
    <Sequence DisplayName="Initialize Vars" sap:VirtualizedContainerService.HintSize="611,352" sap2010:WorkflowViewState.IdRef="Sequence_13">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:MultipleAssign DisplayName="Multiple Assign - Change Null Values to Blank Strings" sap:VirtualizedContainerService.HintSize="479,232" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[in_To]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[CStr(iif(in_To Is Nothing, "", in_To))]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[in_CC]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[CStr(iif(in_CC Is Nothing, "", in_CC))]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[in_BCC]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[CStr(iif(in_BCC Is Nothing, "", in_BCC))]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[in_ReplyTo]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[CStr(iif(in_ReplyTo Is Nothing, "", in_ReplyTo))]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
      </ui:MultipleAssign>
    </Sequence>
    <Sequence DisplayName="Gather Attachments" sap:VirtualizedContainerService.HintSize="611,2133" sap2010:WorkflowViewState.IdRef="Sequence_5">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:IfElseIf DisplayName="If AttachmentFolder THEN All Files ELSEIF QueueDetails Made THEN QueueDetails Only" sap:VirtualizedContainerService.HintSize="549,968" sap2010:WorkflowViewState.IdRef="IfElseIf_1">
        <ui:IfElseIf.ConditionBlocks>
          <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
            <ui:IfElseIfBlock BlockType="If" Condition="[String.IsNullOrEmpty(in_AttachmentsFolder) = False]" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_1">
              <ui:IfElseIfBlock.Then>
                <Sequence DisplayName="Use Attachment Folder - All Files" sap:VirtualizedContainerService.HintSize="496,307" sap2010:WorkflowViewState.IdRef="Sequence_14">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:String[]">[str_AttachmentList]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:String[]">[System.IO.Directory.GetFiles(in_AttachmentsFolder)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_4">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_AttachmentLog]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[String.Join(",",str_AttachmentList)]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ui:IfElseIfBlock.Then>
            </ui:IfElseIfBlock>
            <ui:IfElseIfBlock BlockType="ElseIf" Condition="[String.IsNullOrEmpty(in_AttachmentsFolder) = True AndAlso in_Config IsNot Nothing AndAlso in_Config.ContainsKey(&quot;Recap_QueueDetailsPath&quot;)]" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_2">
              <ui:IfElseIfBlock.Then>
                <Sequence DisplayName="Use Attachment Folder - QueueDetails Only" sap:VirtualizedContainerService.HintSize="496,307" sap2010:WorkflowViewState.IdRef="Sequence_15">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_5">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:String[]">[str_AttachmentList]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:String[]">[{in_Config("Recap_QueueDetailsPath")}]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_6">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_AttachmentLog]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[String.Join(",",str_AttachmentList)]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ui:IfElseIfBlock.Then>
            </ui:IfElseIfBlock>
          </sc:BindingList>
        </ui:IfElseIf.ConditionBlocks>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:IfElseIf>
      <ui:CreateList x:TypeArguments="upr:IResource" DisplayName="Create List" sap:VirtualizedContainerService.HintSize="549,165" sap2010:WorkflowViewState.IdRef="CreateList`1_2" NewList="[res_AttachmentList]" />
      <If Condition="[String.IsNullOrEmpty(str_AttachmentLog) = False]" DisplayName="If AttachmentList exists THEN Populate resource list" sap:VirtualizedContainerService.HintSize="549,880" sap2010:WorkflowViewState.IdRef="If_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="512,616" sap2010:WorkflowViewState.IdRef="Sequence_17">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each Attachment Add a Resource" sap:VirtualizedContainerService.HintSize="450,528" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[str_AttachmentList]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="curAttachment" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,391" sap2010:WorkflowViewState.IdRef="Sequence_19">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="upr:ILocalResource" Name="res_CurrentAttachment" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:PathExists Exists="{x:Null}" DisplayName="Path Exists" sap:VirtualizedContainerService.HintSize="354,147" sap2010:WorkflowViewState.IdRef="PathExists_2" Path="[curAttachment]" PathType="File" Resource="[res_CurrentAttachment]" />
                    <uasa:AppendItemToList x:TypeArguments="upr:IResource" ItemIndex="{x:Null}" DisplayName="Append Item to List" sap:VirtualizedContainerService.HintSize="354,156" sap2010:WorkflowViewState.IdRef="AppendItemToList`1_4" ItemToAppend="[res_CurrentAttachment]" List="[res_AttachmentList]" />
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,103" sap2010:WorkflowViewState.IdRef="Sequence_18">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
    <Sequence DisplayName="Get Creds and Send Email" sap:VirtualizedContainerService.HintSize="611,1818" sap2010:WorkflowViewState.IdRef="Sequence_9">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="str_Account" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="Mail_SharedMailbox" CacheStrategy="None" DisplayName="Get Asset" sap:VirtualizedContainerService.HintSize="488,175" sap2010:WorkflowViewState.IdRef="GetRobotAsset_4">
        <ui:GetRobotAsset.Value>
          <OutArgument x:TypeArguments="x:String">[str_Account]</OutArgument>
        </ui:GetRobotAsset.Value>
      </ui:GetRobotAsset>
      <umam:SendMailConnections ArgumentAttachmentPaths="{x:Null}" AttachmentList="{x:Null}" AttachmentPaths="{x:Null}" ConnectionAccountName="{x:Null}" ContinueOnError="{x:Null}" TextBody="{x:Null}" AttachmentInputMode="Existing" Attachments="[res_AttachmentList]" AuthScopesInvalid="False" Bcc="[in_BCC.Split(&quot;;&quot;)]" Body="[in_HTMLBody]" Cc="[in_CC.Split(&quot;;&quot;)]" ConnectionId="5dfc7488-fc65-497e-9360-47247a0345de" DisplayName="Send Email" sap:VirtualizedContainerService.HintSize="488,636" sap2010:WorkflowViewState.IdRef="SendMailConnections_1" Importance="Normal" InputType="HTML" Mailbox="[str_Account]" ReplyTo="[in_ReplyTo.Split(&quot;;&quot;)]" SaveAsDraft="False" Subject="[in_Subject]" To="[in_To.Split(&quot;;&quot;)]" UseConnectionService="True" UseSharedMailbox="True">
        <umam:SendMailConnections.AttachmentsBackup>
          <usau:BackupSlot x:TypeArguments="umame:AttachmentInputMode" StoredValue="Existing">
            <usau:BackupSlot.BackupValues>
              <scg:List x:TypeArguments="x:Object" x:Key="Existing" Capacity="1">
                <InArgument x:TypeArguments="scg:IEnumerable(upr:IResource)">[res_AttachmentEnumerable]</InArgument>
              </scg:List>
              <scg:List x:TypeArguments="x:Object" x:Key="Builder" Capacity="1">
                <x:Null />
              </scg:List>
            </usau:BackupSlot.BackupValues>
          </usau:BackupSlot>
        </umam:SendMailConnections.AttachmentsBackup>
        <umam:SendMailConnections.InputTypeBackup>
          <usau:BackupSlot x:TypeArguments="umame:BodyInputType" StoredValue="HTML">
            <usau:BackupSlot.BackupValues>
              <scg:Dictionary x:TypeArguments="umame:BodyInputType, scg:List(x:Object)" />
            </usau:BackupSlot.BackupValues>
          </usau:BackupSlot>
        </umam:SendMailConnections.InputTypeBackup>
        <umam:SendMailConnections.MailboxBackup>
          <usau:BackupSlot x:TypeArguments="umame:MailboxSelectionMode" StoredValue="UseMailbox">
            <usau:BackupSlot.BackupValues>
              <scg:List x:TypeArguments="x:Object" x:Key="NoMailbox" Capacity="1">
                <x:Null />
              </scg:List>
            </usau:BackupSlot.BackupValues>
          </usau:BackupSlot>
        </umam:SendMailConnections.MailboxBackup>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </umam:SendMailConnections>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="488,173" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Email sent: &quot; &amp; in_Subject]" />
      <If Condition="[Not in_DBConn Is Nothing]" DisplayName="If db connection provided THEN Log Email" sap:VirtualizedContainerService.HintSize="488,714" sap2010:WorkflowViewState.IdRef="If_3">
        <If.Then>
          <TryCatch DisplayName="Try Catch Email Log" sap:VirtualizedContainerService.HintSize="454,428" sap2010:WorkflowViewState.IdRef="TryCatch_2">
            <TryCatch.Try>
              <Sequence DisplayName="Try Email Log" sap:VirtualizedContainerService.HintSize="416,200" sap2010:WorkflowViewState.IdRef="Sequence_10">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExecuteNonQuery AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Run command" ExistingDbConnection="[in_DBConn]" sap:VirtualizedContainerService.HintSize="354,112" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_2" Sql="INSERT INTO _EmailLog ([Process],[Action],[From],ReplyTo,[To],CC,[Subject],Attachments,HighImportance,Job_Id) VALUES (@Process,@Action,@From,@ReplyTo,@To,@CC,@Subject,@Attachments,@HighImportance,@Job_Id)">
                  <ui:ExecuteNonQuery.Parameters>
                    <InArgument x:TypeArguments="x:String" x:Key="Process">[in_Config("Process").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Action">[in_Config("Action").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="From">[str_Account]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ReplyTo">[in_ReplyTo]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="To">[in_To]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="CC">[in_CC]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Subject">[in_Subject]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Attachments">[str_AttachmentLog]</InArgument>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="HighImportance">False</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Job_Id">[in_Config("JobID").ToString]</InArgument>
                  </ui:ExecuteNonQuery.Parameters>
                </ui:ExecuteNonQuery>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="420,22" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Catch Email Log" sap:VirtualizedContainerService.HintSize="416,252" sap2010:WorkflowViewState.IdRef="Sequence_11">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="354,164" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Warn" Message="[&quot;Email was sent but was not able to be added to the Email Log database.  Message: &quot; &amp; exception.Message]" />
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,103" sap2010:WorkflowViewState.IdRef="Sequence_12">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="611,164" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Trace" Message="[&quot;End: Email_Send&quot;]" />
  </Sequence>
</Activity>